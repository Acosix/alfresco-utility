<?xml version='1.0' encoding='UTF-8'?>
<!-- 
 Copyright 2016 - 2022 Acosix GmbH

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean parent="dictionaryModelBootstrap">
        <property name="models">
            <list>
                <value>alfresco/module/${moduleId}/model/emailModel.xml</value>
            </list>
        </property>
        <property name="labels">
            <list>
                <value>alfresco.messages.${messages.packageId}.emailModel</value>
            </list>
        </property>
    </bean>

    <!-- depends-on for log4JHierarchyInit only to force early-most initialization -->
    <bean id="${moduleId}-enhanceInboundSMTPChildApplicationContextFactory"
        class="${common.artifactId}.spring.ImplementationClassReplacingBeanDefinitionRegistryPostProcessor" depends-on="log4JHierarchyInit">
        <property name="enabledPropertyKey" value="${configModuleId}.email.inboundSMTP.subsystemEnhancement.enabled" />
        <property name="propertiesSource" ref="global-properties" />

        <property name="targetBeanName" value="InboundSMTP" />
        <property name="originalClassName" value="org.alfresco.repo.management.subsystems.ChildApplicationContextFactory" />
        <property name="replacementClassName" value="${javaPackageName}.subsystems.SubsystemChildApplicationContextFactory" />
    </bean>

    <bean id="${moduleId}-enhanceModuleStarter-implementation"
        class="${common.artifactId}.spring.ImplementationClassReplacingBeanDefinitionRegistryPostProcessor" depends-on="log4JHierarchyInit">
        <property name="enabledPropertyKey" value="${configModuleId}.moduleComponent.alfServer.deadlockPrevention.enabled" />
        <property name="propertiesSource" ref="global-properties" />

        <property name="targetBeanName" value="moduleStarter" />
        <property name="originalClassName" value="org.alfresco.repo.module.ModuleStarter" />
        <property name="replacementClassName" value="${javaPackageName}.module.ServerEnsuringModuleStarter" />
    </bean>

    <bean id="${moduleId}-enhanceModuleStarter-nodeDAOReference"
        class="${common.artifactId}.spring.PropertyAlteringBeanDefinitionRegistryPostProcessor" depends-on="log4JHierarchyInit">
        <property name="dependsOn">
            <list>
                <ref bean="${moduleId}-enhanceModuleStarter-implementation" />
            </list>
        </property>
        <property name="enabledPropertyKey" value="${configModuleId}.moduleComponent.alfServer.deadlockPrevention.enabled" />
        <property name="propertiesSource" ref="global-properties" />
        <property name="targetBeanName" value="moduleStarter" />
        <property name="expectedClassName" value="${javaPackageName}.module.ServerEnsuringModuleStarter" />
        <property name="propertyName" value="nodeDAO" />
        <property name="beanReferenceName" value="nodeDAO" />
    </bean>

    <bean id="${moduleId}.tenantExtensibilityContainerPatch"
        class="${common.artifactId}.spring.ImplementationClassReplacingBeanFactoryPostProcessor">
        <property name="enabled" value="\${${configModuleId}.web.scripts.extensibleContainer.enabled}" />
        <property name="targetBeanName" value="webscripts.container" />
        <!-- this should be the default -->
        <property name="originalClassName" value="org.alfresco.repo.web.scripts.TenantRepositoryContainer" />
        <property name="replacementClassName" value="${javaPackageName}.web.scripts.TenantExtensibilityContainer" />
    </bean>

    <bean id="${moduleId}.extensibilityContainerPatch"
        class="${common.artifactId}.spring.ImplementationClassReplacingBeanFactoryPostProcessor">
        <property name="enabled" value="\${${configModuleId}.web.scripts.extensibleContainer.enabled}" />
        <property name="targetBeanName" value="webscripts.container" />
        <!-- this is the default based on the original 2012 blog post -->
        <property name="originalClassName" value="org.alfresco.repo.web.scripts.RepositoryContainer" />
        <property name="replacementClassName" value="org.alfresco.repo.web.scripts.ExtensibilityContainer" />
    </bean>

    <bean id="${moduleId}.extensibleDeclarativeWebScriptPatch"
        class="${common.artifactId}.spring.ImplementationClassReplacingBeanFactoryPostProcessor">
        <property name="enabled" value="\${${configModuleId}.web.scripts.extensibleContainer.enabled}" />
        <property name="targetBeanName" value="webscript.default" />
        <!-- this should be the default -->
        <property name="originalClassName" value="org.springframework.extensions.webscripts.DeclarativeWebScript" />
        <property name="replacementClassName" value="${common.artifactId}.web.scripts.ExtensibleDeclarativeWebScript" />
    </bean>

    <bean id="${moduleId}.extensibilityHandlerPatch" class="${common.artifactId}.spring.PropertyAlteringBeanFactoryPostProcessor">
        <property name="enabled" value="\${${configModuleId}.web.scripts.extensibleContainer.enabled}" />
        <property name="targetBeanName" value="webscripts.container" />
        <property name="propertyName" value="extensibilityModuleHandler" />
        <property name="beanReferenceName" value="extensibility.handler" />
    </bean>

    <bean id="${moduleId}.webScript.indexPatch-proto"
        class="${common.artifactId}.spring.ImplementationClassReplacingBeanFactoryPostProcessor">
        <property name="enabled" value="\${${configModuleId}.web.scripts.improvedIndex.enabled}" />
        <property name="targetBeanName" value="webscripts.index.prototype" />
        <!-- use of prototype is not consistent -->
        <property name="failIfTargetBeanMissing" value="false" />
        <property name="originalClassName" value="org.springframework.extensions.webscripts.JaxRSUriIndex" />
        <property name="replacementClassName" value="${common.artifactId}.web.scripts.JaxRSUriIndex" />
    </bean>

    <bean id="${moduleId}.webScript.indexPatch"
        class="${common.artifactId}.spring.ImplementationClassReplacingBeanFactoryPostProcessor">
        <property name="enabled" value="\${${configModuleId}.web.scripts.improvedIndex.enabled}" />
        <property name="targetBeanName" value="webscripts.index" />
        <property name="originalClassName" value="org.springframework.extensions.webscripts.JaxRSUriIndex" />
        <property name="replacementClassName" value="${common.artifactId}.web.scripts.JaxRSUriIndex" />
    </bean>

    <bean id="${moduleId}.globalAuthenticationListener.facadePatch"
        class="${common.artifactId}.spring.ImplementationClassReplacingBeanDefinitionRegistryPostProcessor">
        <property name="enabledPropertyKey" value="${configModuleId}.web.auth.multipleAuthenticationListeners.enabled" />
        <property name="propertiesSource" ref="global-properties" />
        <property name="targetBeanName" value="globalAuthenticationListener" />
        <!-- this should be the default -->
        <property name="originalClassName" value="org.alfresco.repo.web.auth.NoopAuthenticationListener" />
        <property name="replacementClassName" value="${javaPackageName}.web.auth.AuthenticationListenersFacade" />
    </bean>

    <bean id="${moduleId}.globalAuthenticationListener.listenersPatch"
        class="${common.artifactId}.spring.PropertyAlteringBeanDefinitionRegistryPostProcessor">
        <property name="dependsOn">
            <list>
                <ref bean="${moduleId}.globalAuthenticationListener.facadePatch" />
            </list>
        </property>
        <property name="enabledPropertyKey" value="${configModuleId}.web.auth.multipleAuthenticationListeners.enabled" />
        <property name="propertiesSource" ref="global-properties" />
        <property name="targetBeanName" value="globalAuthenticationListener" />
        <property name="expectedClassName" value="${javaPackageName}.web.auth.AuthenticationListenersFacade" />
        <property name="propertyName" value="authenticationListeners" />
        <property name="beanReferenceNameList">
            <list>
            </list>
        </property>
    </bean>

    <bean id="${moduleId}.webDavAuthenticationListener.facadePatch"
        class="${common.artifactId}.spring.ImplementationClassReplacingBeanDefinitionRegistryPostProcessor">
        <property name="enabledPropertyKey" value="${configModuleId}.web.auth.multipleAuthenticationListeners.enabled" />
        <property name="propertiesSource" ref="global-properties" />
        <property name="targetBeanName" value="webDavAuthenticationListener" />
        <!-- this should be the default -->
        <property name="originalClassName" value="org.alfresco.repo.web.auth.NoopAuthenticationListener" />
        <property name="replacementClassName" value="${javaPackageName}.web.auth.AuthenticationListenersFacade" />
    </bean>

    <bean id="${moduleId}.webDavAuthenticationListener.listenersPatch"
        class="${common.artifactId}.spring.PropertyAlteringBeanDefinitionRegistryPostProcessor">
        <property name="dependsOn">
            <list>
                <ref bean="${moduleId}.webDavAuthenticationListener.facadePatch" />
            </list>
        </property>
        <property name="enabledPropertyKey" value="${configModuleId}.web.auth.multipleAuthenticationListeners.enabled" />
        <property name="propertiesSource" ref="global-properties" />
        <property name="targetBeanName" value="webDavAuthenticationListener" />
        <property name="expectedClassName" value="${javaPackageName}.web.auth.AuthenticationListenersFacade" />
        <property name="propertyName" value="authenticationListeners" />
        <property name="beanReferenceNameList">
            <list>
            </list>
        </property>
    </bean>

    <bean id="${moduleId}.sharepointAuthenticationListener.facadePatch"
        class="${common.artifactId}.spring.ImplementationClassReplacingBeanDefinitionRegistryPostProcessor">
        <property name="enabledPropertyKey" value="${configModuleId}.web.auth.multipleAuthenticationListeners.enabled" />
        <property name="propertiesSource" ref="global-properties" />
        <property name="targetBeanName" value="sharepointAuthenticationListener" />
        <!-- this should be the default -->
        <property name="originalClassName" value="org.alfresco.repo.web.auth.NoopAuthenticationListener" />
        <!-- no longer exists in Alfresco 6.0 -->
        <property name="failIfTargetBeanMissing" value="false" />
        <property name="replacementClassName" value="${javaPackageName}.web.auth.AuthenticationListenersFacade" />
    </bean>

    <bean id="${moduleId}.sharepointAuthenticationListener.listenersPatch"
        class="${common.artifactId}.spring.PropertyAlteringBeanDefinitionRegistryPostProcessor">
        <property name="dependsOn">
            <list>
                <ref bean="${moduleId}.sharepointAuthenticationListener.facadePatch" />
            </list>
        </property>
        <property name="enabledPropertyKey" value="${configModuleId}.web.auth.multipleAuthenticationListeners.enabled" />
        <property name="propertiesSource" ref="global-properties" />
        <property name="targetBeanName" value="sharepointAuthenticationListener" />
        <property name="expectedClassName" value="${javaPackageName}.web.auth.AuthenticationListenersFacade" />
        <!-- no longer exists in Alfresco 6.0 -->
        <property name="failIfTargetBeanMissing" value="false" />
        <property name="propertyName" value="authenticationListeners" />
        <property name="beanReferenceNameList">
            <list>
            </list>
        </property>
    </bean>

    <bean id="${moduleId}.webScriptAuthenticationListener.facadePatch"
        class="${common.artifactId}.spring.ImplementationClassReplacingBeanDefinitionRegistryPostProcessor">
        <property name="propertiesSource" ref="global-properties" />
        <property name="enabledPropertyKey" value="${configModuleId}.web.auth.multipleAuthenticationListeners.enabled" />
        <property name="targetBeanName" value="webScriptAuthenticationListener" />
        <!-- this should be the default -->
        <property name="originalClassName" value="org.alfresco.repo.web.auth.NoopAuthenticationListener" />
        <property name="replacementClassName" value="${javaPackageName}.web.auth.AuthenticationListenersFacade" />
    </bean>

    <bean id="${moduleId}.webScriptAuthenticationListener.listenersPatch"
        class="${common.artifactId}.spring.PropertyAlteringBeanDefinitionRegistryPostProcessor">
        <property name="dependsOn">
            <list>
                <ref bean="${moduleId}.webScriptAuthenticationListener.facadePatch" />
            </list>
        </property>
        <property name="enabledPropertyKey" value="${configModuleId}.web.auth.multipleAuthenticationListeners.enabled" />
        <property name="propertiesSource" ref="global-properties" />
        <property name="targetBeanName" value="webScriptAuthenticationListener" />
        <property name="expectedClassName" value="${javaPackageName}.web.auth.AuthenticationListenersFacade" />
        <property name="propertyName" value="authenticationListeners" />
        <property name="beanReferenceNameList">
            <list>
            </list>
        </property>
    </bean>

    <bean id="${moduleId}.improvedTypeConverter.patch" class="${javaPackageName}.datatype.ImprovedTypeConverterInitialiser">
        <property name="namespaceService" ref="NamespaceService" />
        <property name="stringToNodeRefEnabled" value="\${${configModuleId}.datatype.improvedTypeConverter.string2NodeRef.enabled}" />
        <property name="stringToQNameEnabled" value="\${${configModuleId}.datatype.improvedTypeConverter.string2QName.enabled}" />
        <property name="stringToLocaleEnabled" value="\${${configModuleId}.datatype.improvedTypeConverter.string2Locale.enabled}" />
    </bean>

    <bean id="${moduleId}.xpathNodeLocator.typePatch"
        class="${common.artifactId}.spring.ImplementationClassReplacingBeanDefinitionRegistryPostProcessor">
        <property name="enabledPropertyKey" value="${configModuleId}.properXPathNodeLocator.enabled" />
        <property name="propertiesSource" ref="global-properties" />
        <property name="targetBeanName" value="xpathNodeLocator" />
        <property name="originalClassName" value="org.alfresco.repo.nodelocator.XPathNodeLocator" />
        <property name="replacementClassName" value="${javaPackageName}.locator.XPathNodeLocator" />
    </bean>

    <bean id="${moduleId}.xpathNodeLocator.namespaceServicePropPatch"
        class="${common.artifactId}.spring.PropertyAlteringBeanDefinitionRegistryPostProcessor">
        <property name="dependsOn">
            <list>
                <ref bean="${moduleId}.xpathNodeLocator.typePatch" />
            </list>
        </property>
        <property name="enabledPropertyKey" value="${configModuleId}.properXPathNodeLocator.enabled" />
        <property name="propertiesSource" ref="global-properties" />
        <property name="targetBeanName" value="xpathNodeLocator" />
        <property name="expectedClassName" value="${javaPackageName}.locator.XPathNodeLocator" />
        <property name="propertyName" value="namespaceService" />
        <property name="beanReferenceName">
            <idref bean="NamespaceService" />
        </property>
    </bean>

    <bean id="${moduleId}.xpathNodeLocator.nodeServicePropPatch"
        class="${common.artifactId}.spring.PropertyAlteringBeanDefinitionRegistryPostProcessor">
        <property name="dependsOn">
            <list>
                <ref bean="${moduleId}.xpathNodeLocator.typePatch" />
            </list>
        </property>
        <property name="enabledPropertyKey" value="${configModuleId}.properXPathNodeLocator.enabled" />
        <property name="propertiesSource" ref="global-properties" />
        <property name="targetBeanName" value="xpathNodeLocator" />
        <property name="expectedClassName" value="${javaPackageName}.locator.XPathNodeLocator" />
        <property name="propertyName" value="nodeService" />
        <property name="beanReferenceName">
            <idref bean="NodeService" />
        </property>
    </bean>

    <bean id="${moduleId}.nodeServiceExtension.extensionTypePatch"
        class="${common.artifactId}.spring.ImplementationClassReplacingBeanFactoryPostProcessor">
        <property name="enabled" value="\${${configModuleId}.relaxedVirtualNodeService.enabled}" />
        <property name="targetBeanName" value="nodeServiceExtension" />
        <!-- this should be the default -->
        <property name="originalClassName" value="org.alfresco.repo.virtual.bundle.VirtualNodeServiceExtension" />
        <property name="replacementClassName" value="${javaPackageName}.virtual.RelaxedVirtualNodeServiceExtension" />
    </bean>

    <bean id="${moduleId}.nodeServiceExtension.dictionaryServicePropPatch"
        class="${common.artifactId}.spring.PropertyAlteringBeanFactoryPostProcessor">
        <property name="dependsOn">
            <list>
                <ref bean="${moduleId}.nodeServiceExtension.extensionTypePatch" />
            </list>
        </property>
        <property name="enabled" value="\${${configModuleId}.relaxedVirtualNodeService.enabled}" />
        <property name="targetBeanName" value="nodeServiceExtension" />
        <property name="expectedClassName" value="${javaPackageName}.virtual.RelaxedVirtualNodeServiceExtension" />
        <property name="propertyName" value="dictionaryService" />
        <property name="beanReferenceName">
            <idref bean="dictionaryService" />
        </property>
    </bean>

    <bean id="${moduleId}.nodeServiceExtension.storeTypePatch"
        class="${common.artifactId}.spring.ImplementationClassReplacingBeanFactoryPostProcessor">
        <property name="enabled" value="\${${configModuleId}.relaxedVirtualNodeService.enabled}" />
        <property name="targetBeanName" value="smartStore" />
        <!-- this should be the default -->
        <property name="originalClassName" value="org.alfresco.repo.virtual.store.VirtualStoreImpl" />
        <property name="replacementClassName" value="${javaPackageName}.virtual.RelaxedVirtualStoreImpl" />
    </bean>

    <bean id="${moduleId}.nodeServiceExtension.userPermissions.removeReadOnlySmartDeniesPatch"
        class="${common.artifactId}.spring.PropertyAlteringBeanFactoryPostProcessor">
        <property name="enabled" value="\${${configModuleId}.relaxedVirtualNodeService.enabled}" />
        <property name="targetBeanName" value="smartStore" />
        <property name="expectedClassName" value="${javaPackageName}.virtual.RelaxedVirtualStoreImpl" />
        <property name="propertyName" value="userPermissions" />
        <property name="value">
            <!-- hard/difficult to do targeted replacement of all the properties in the nested bean -->
            <!-- and we want to remove all restrictions anyway, so simplest to replace the bean with a no-op -->
            <bean id="smartUserPermissions" class="${javaPackageName}.virtual.RelaxedVirtualUserPermissions" init-method="init" />
        </property>
    </bean>

    <bean id="${moduleId}.legacyTransform.executorServicePatch.condition"
        class="${common.artifactId}.spring.condition.AggregateCondition">
        <property name="conditions">
            <list>
                <bean class="${common.artifactId}.spring.condition.BeanDefinedCondition">
                    <property name="beanName" value="legacyTransformClient" />
                </bean>
                <bean class="${common.artifactId}.spring.condition.BeanPropertySetCondition">
                    <property name="beanName" value="legacyTransformClient" />
                    <property name="propertyName" value="executorService" />
                    <property name="negate" value="true" />
                </bean>
            </list>
        </property>
    </bean>

    <bean id="${moduleId}.legacyTransform.executorServicePatch.threadPool" abstract="true"
        class="org.alfresco.util.ThreadPoolExecutorFactoryBean">
        <property name="poolName" value="legacy.transform.service" />
        <property name="corePoolSize" value="${legacy.transform.service.corePoolSize}" />
        <property name="maximumPoolSize" value="${legacy.transform.service.maximumPoolSize}" />
        <property name="threadPriority" value="${legacy.transform.service.threadPriority}" />
    </bean>

    <bean id="${moduleId}.legacyTransform.executorServicePatch.enableThreadPool"
        class="${common.artifactId}.spring.BeanDeAbstractifyingBeanDefinitionRegistryPostProcessor">
        <property name="enabledPropertyKey" value="${configModuleId}.legacyTransform.executorService.enabled" />
        <property name="propertiesSource" ref="global-properties" />
        <property name="condition" ref="${moduleId}.legacyTransform.executorServicePatch.condition" />
        <property name="targetBeanName" value="${moduleId}.legacyTransform.executorServicePatch.threadPool" />
    </bean>

    <bean id="${moduleId}.legacyTransform.executorServicePatch.registerThreadPool"
        class="${common.artifactId}.spring.PropertyAlteringBeanDefinitionRegistryPostProcessor">
        <property name="enabledPropertyKey" value="${configModuleId}.legacyTransform.executorService.enabled" />
        <property name="propertiesSource" ref="global-properties" />
        <property name="condition" ref="${moduleId}.legacyTransform.executorServicePatch.condition" />
        <property name="targetBeanName" value="legacyTransformClient" />
        <property name="expectedClassName" value="org.alfresco.repo.rendition2.LegacyTransformClient" />
        <property name="propertyName" value="executorService" />
        <property name="beanReferenceName" value="${moduleId}.legacyTransform.executorServicePatch.threadPool" />
        <property name="dependsOn">
            <list>
                <ref bean="${moduleId}.legacyTransform.executorServicePatch.enableThreadPool" />
            </list>
        </property>
    </bean>

    <bean id="${moduleId}.localTransform.executorServicePatch.condition"
        class="${common.artifactId}.spring.condition.AggregateCondition">
        <property name="conditions">
            <list>
                <bean class="${common.artifactId}.spring.condition.BeanDefinedCondition">
                    <property name="beanName" value="localTransformClient" />
                </bean>
                <bean class="${common.artifactId}.spring.condition.BeanPropertySetCondition">
                    <property name="beanName" value="localTransformClient" />
                    <property name="propertyName" value="executorService" />
                    <property name="negate" value="true" />
                </bean>
            </list>
        </property>
    </bean>

    <bean id="${moduleId}.localTransform.executorServicePatch.threadPool" abstract="true"
        class="org.alfresco.util.ThreadPoolExecutorFactoryBean">
        <property name="poolName" value="local.transform.service" />
        <property name="corePoolSize" value="${local.transform.service.corePoolSize}" />
        <property name="maximumPoolSize" value="${local.transform.service.maximumPoolSize}" />
        <property name="threadPriority" value="${local.transform.service.threadPriority}" />
    </bean>

    <bean id="${moduleId}.localTransform.executorServicePatch.enableThreadPool"
        class="${common.artifactId}.spring.BeanDeAbstractifyingBeanDefinitionRegistryPostProcessor">
        <property name="enabledPropertyKey" value="${configModuleId}.localTransform.executorService.enabled" />
        <property name="propertiesSource" ref="global-properties" />
        <property name="condition" ref="${moduleId}.localTransform.executorServicePatch.condition" />
        <property name="targetBeanName" value="${moduleId}.localTransform.executorServicePatch.threadPool" />
    </bean>

    <bean id="${moduleId}.localTransform.executorServicePatch.registerThreadPool"
        class="${common.artifactId}.spring.PropertyAlteringBeanDefinitionRegistryPostProcessor">
        <property name="enabledPropertyKey" value="${configModuleId}.localTransform.executorService.enabled" />
        <property name="propertiesSource" ref="global-properties" />
        <property name="condition" ref="${moduleId}.localTransform.executorServicePatch.condition" />
        <property name="targetBeanName" value="localTransformClient" />
        <property name="expectedClassName" value="org.alfresco.repo.rendition2.LocalTransformClient" />
        <property name="propertyName" value="executorService" />
        <property name="beanReferenceName" value="${moduleId}.localTransform.executorServicePatch.threadPool" />
        <property name="dependsOn">
            <list>
                <ref bean="${moduleId}.localTransform.executorServicePatch.enableThreadPool" />
            </list>
        </property>
    </bean>

</beans>