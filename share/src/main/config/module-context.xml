<?xml version='1.0' encoding='UTF-8'?>
<!-- 
 Copyright 2016 Acosix GmbH

 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
 -->
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <bean id="${moduleId}-css.theme.handler-postProcessor" abstract="true"
        class="${common.artifactId}.spring.ImplementationClassReplacingBeanDefinitionRegistryPostProcessor">
        <property name="enabledPropertyKey" value="${moduleId}.surf.stateSafeCssThemeHandler.enabled" />
        <property name="propertiesSource" ref="global-properties" />
        <property name="targetBeanName" value="css.theme.handler" />
    </bean>

    <bean parent="${moduleId}-css.theme.handler-postProcessor">
        <property name="originalClassName" value="org.springframework.extensions.surf.CssThemeHandler" />
        <property name="replacementClassName" value="${project.artifactId}.surf.StateSafeCssThemeHandler" />
    </bean>

    <bean parent="${moduleId}-css.theme.handler-postProcessor">
        <property name="originalClassName" value="org.springframework.extensions.surf.HybridCssThemeHandler" />
        <property name="replacementClassName" value="${project.artifactId}.surf.StateSafeHybridCssThemeHandler" />
    </bean>

    <bean parent="${moduleId}-css.theme.handler-postProcessor">
        <property name="originalClassName" value="org.springframework.extensions.surf.LessForJavaCssThemeHandler" />
        <property name="replacementClassName" value="${project.artifactId}.surf.StateSafeLessForJavaCssThemeHandler" />
    </bean>

    <bean parent="${moduleId}-css.theme.handler-postProcessor">
        <property name="originalClassName" value="org.springframework.extensions.surf.ExternalLessCssThemeHandler" />
        <property name="replacementClassName" value="${project.artifactId}.surf.StateSafeExternalLessCssThemeHandler" />
    </bean>

    <!-- better detection of widget configs in JS sources -->
    <!-- this supports single- and multi-widget configs -->
    <!-- this supports variables and members -->
    <!-- this supports aggregated variable / member names -->
    <bean class="${common.artifactId}.spring.PropertyAlteringBeanFactoryPostProcessor">
        <property name="targetBeanName" value="define.dojo.widgets.dependency.rule" />
        <property name="propertyName" value="declarationRegex" />
        <property name="value"
            value="&quot;?(?:_+)?(?:widgets?|[\w]+Widgets?|widgets?[A-Z]\w+)(?:_+)?&quot;?[^:=]*?[:=][\r\s\t\n]*\[?(\{(.*)\})\]?" />
        <property name="enabled" value="\${${moduleId}.surf.betterRegexDojoWidgetsRule.enabled}" />
    </bean>

    <bean class="${common.artifactId}.spring.ImplementationClassReplacingBeanFactoryPostProcessor">
        <property name="targetBeanName" value="define.dojo.widgets.dependency.rule" />
        <property name="originalClassName" value="org.springframework.extensions.surf.DojoWidgetsDependencyRule" />
        <property name="replacementClassName" value="${project.artifactId}.surf.JSONAwareWidgetsDependencyRule" />
        <property name="enabled" value="\${${moduleId}.surf.jsonAwareDojoWidgetsRule.enabled}" />
    </bean>
    
    <bean class="${common.artifactId}.spring.ImplementationClassReplacingBeanFactoryPostProcessor">
        <property name="enabled" value="\${${moduleId}.web.scripts.correctScriptCustomizationLookup.enabled}" />
        <property name="targetBeanName" value="webscript.default" />
        <!-- this should be the default -->
        <property name="originalClassName" value="org.springframework.extensions.webscripts.DeclarativeWebScript" />
        <property name="replacementClassName" value="${common.artifactId}.web.scripts.ExtensibleDeclarativeWebScript" />
    </bean>
</beans>
